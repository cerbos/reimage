---
name: CI
on:
  pull_request:
    branches:
      - main
      - 'v*'
jobs:
  changes:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      code: ${{ steps.filter.outputs.code }}
      docs: ${{ steps.filter.outputs.docs }}
      protos: ${{ steps.filter.outputs.protos }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            code:
              - '!(docs/**)'
            docs:
              - .github/workflows/pr-test.yaml
              - 'docs/**'
            protos:
              - .github/workflows/pr-test.yaml
              - '**/*.proto'

  cache:
    uses: ./.github/workflows/cache.yaml

  download-test-times:
    name: Download test times
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Download previous test times
        continue-on-error: true
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: pr-test.yaml
          name: test-times
          search_artifacts: true

      - name: Upload previous test times
        uses: actions/upload-artifact@v3
        with:
          name: previous-test-times
          path: test-times.json

  test:
    needs:
      - changes
      - download-test-times
    if: ${{ needs.changes.outputs.code == 'true' }}
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        split: [0, 1, 2, 3, 4, 5]
    outputs:
      job-total: ${{ strategy.job-total }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Install Go and restore cached dependencies
        uses: ./.github/actions/setup-go

      - name: Download previous test times
        uses: actions/download-artifact@v3
        with:
          name: previous-test-times

      - name: Test
        run: go test ./...

      - name: Upload JUnit reports
        uses: actions/upload-artifact@v3
        with:
          name: junit-reports-${{ strategy.job-index }}
          path: junit.*.xml

      - name: Upload to CodeCov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: "unit.cover,integration.cover"

  upload-test-times:
    needs: test
    name: Upload test times
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go and restore cached dependencies
        uses: ./.github/actions/setup-go

      - name: Download JUnit reports
        uses: actions/download-artifact@v3

      - name: Combine JUnit reports
        run: |-
          mv junit-reports-*/junit.*.xml .
          make test-times TESTSPLIT_TOTAL=${{ needs.test.outputs.job-total }}

      - name: Upload new test times
        uses: actions/upload-artifact@v3
        with:
          name: test-times
          path: test-times.json

  golangci:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x
          check-latest: true
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.5.0
        with:
          version: latest
          args: '--config=.golangci.yaml -v'
